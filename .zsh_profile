
# general
alias lsa="ls -lha --color=auto"


# git
alias config='/usr/bin/git --git-dir=/home/alex/.cfg/ --work-tree=/home/alex'
alias ggraph="git log --graph --oneline --all"
alias get_last_history_items='history | sed s/^\ //g | cut -d" " -f1 --complement | sed s/^\ //'
alias z.="source ~/.zsh_profile"
alias reset_shell_charset_encoding="echo -en '\e(B'"
alias cdd="cd ~/dev"

dig_any() {
    dig $1 -t a +short;
    dig $1 -t aaaa +short;
    dig $1 -t mx +short;
    dig $1 -t cname +short;
    dig $1 -t txt +short;
    dig $1 -t ns +short;
}

git-rebase () {
    from_branch=""
    onto_branch=""
    echo -n "Rebase from: "; read -r from_branch
    echo -n "to: "; read -r onto_branch
    echo "this will replay changes from $from_branch on to $onto_branch, so that $onto_branch's history looks like it shares the same history as $from_branch"
    git rebase -i "$from_branch" "$onto_branch"
}


group_user_info() {
 for group in $(groups); do echo $(getent group $group); done
}


path=('/home/alex/.local/bin' $path)

# mainly a reminder
function python_requirements_update() {
	if [ ! -f ./requirements.txt ]; then
		echo 'ERROR: no requirements.txt found in current working directory'
        else
                < requirements.txt | cut -d"=" -f1 | xargs -I NAME curl -H application/json "https://pypi.org/pypi/NAME/json" -L | jq -r ".info.name + \"==\" + (.releases | keys[-1])" > updated_requirements.txt
	fi
}	


function cheat(){
    curl "cheat.sh/$1"
}


function ip_to_binary {
    split_ip=$(cut -d"." -f1-4 --output-delimiter=$'\n' <<< "$1");
    for field in ${=split_ip}; do 
	acc=""
	while [ "$field" -gt 0 ]; do
	    r=$((field % 2))
            acc="${r}${acc}"
	    field=$((field / 2))
	    done 
	while [ "$(wc -m <<< $acc)" -le 8 ]; do
	        # do stuff here
		acc="0${acc}"
	done    
	echo "$acc";
    done
}

